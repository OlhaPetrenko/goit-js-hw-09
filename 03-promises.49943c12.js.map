{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAeF,SAASC,cAAc,kBACtCE,EAAcH,SAASC,cAAc,iBACrCG,EAAWJ,SAASC,cAAc,mBAqDxC,SAASI,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MA7BPR,EAAOgB,iBAAiB,UAExB,SAAkCC,EAAOV,EAAUC,GACjDS,EAAMC,iBACNV,EAAQW,OAAOhB,EAAaiB,OAC5B,IAAK,IAAIC,EAAI,EAAGA,GAAKhB,EAASe,MAAOC,GAAK,EACxCd,EAAWc,EACXb,GAASW,OAAOf,EAAYgB,OAE5Bd,EAAcC,EAAUC,GACrBc,MAAK,SAAAC,G,IAAGC,EAAQD,EAARhB,SAAUkB,EAAKF,EAALf,MACjBV,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,UAE9DI,OAAM,SAAAN,G,IAAGC,EAAQD,EAARhB,SAAUkB,EAAKF,EAALf,MAClBV,EAAA4B,OAAOI,QAAQ,sBAAqCF,OAAfJ,EAAS,QAAYI,OAANH,EAAM,UAGhER,EAAMc,cAAcC,W","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nconst firstDelayEl = document.querySelector('[name=\"delay\"]');\nconst nextDelayEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\n\n// console.log(firstDelayEl);\n\n// ================================\n// один проміс\n\n// formEl.addEventListener('submit', createPromise);\n\n// function createPromise(position, delay) {\n//   const promise = new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       } else {\n//         reject(`❌ Rejected promise ${position} in ${delay}ms`);\n//       }\n//     }, delay);\n//   });\n//   return promise;\n// }\n// createPromise(2, 1500)\n//   .then(mes => {\n//     console.log(mes);\n//   })\n//   .catch(err => {\n//     console.log(err);\n//   });\n\n//\n// ===========================================================================\n\nformEl.addEventListener('submit', onBtnCreatePromiseEClick);\n\nfunction onBtnCreatePromiseEClick(event, position, delay) {\n  event.preventDefault();\n  delay = Number(firstDelayEl.value);\n  for (let i = 1; i <= amountEl.value; i += 1) {\n    position = i;\n    delay += Number(nextDelayEl.value);\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  event.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$firstDelayEl","$ce04d3a99e08e73b$var$nextDelayEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","Number","value","i","then","param","_$position","_$delay","Notify","success","concat","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.49943c12.js.map"}